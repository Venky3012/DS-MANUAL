#include <stdio.h>
void swap(int* a, int* b) {
 int t = *a;
 *a = *b;
 *b = t;
}
int partition(int arr[], int low, int high) {
 int pivot = arr[high];
 int i = (low - 1);
 
 for (int j = low; j <= high - 1; j++) {
 if (arr[j] < pivot) {
 i++;
 swap(&arr[i], &arr[j]);
 }
 }
 swap(&arr[i + 1], &arr[high]);
 return (i + 1);
}
void quickSort(int arr[], int low, int high) {
 if (low < high) {
 int pi = partition(arr, low, high);
 
 quickSort(arr, low, pi - 1);
 quickSort(arr, pi + 1, high);
 }
}
void printArray(int arr[], int size) {
 for (int i = 0; i < size; i++)
 printf("%d ", arr[i]);
 printf("\n");
}
int main() {
 int arr[] = {6,43,8,54,2,9,32};
 int n = sizeof(arr) / sizeof(arr[0]);
 printf("Original array: \n");
 printArray(arr, n);
 quickSort(arr, 0, n - 1);
 printf("Sorted array with Quick Sort: \n");
 printArray(arr, n);
 return 0;
}
Output :
Original array: 
6 43 8 54 2 9 32 
Sorted array with Quick Sort: 
2 6 8 9 32 43 54
15(b). Implementation of Merge Sort
Program :
#include <stdio.h>
void merge(int arr[], int l, int m, int r) {
 int n1 = m - l + 1;
 int n2 = r - m;
 int L[n1], R[n2];
 for (int i = 0; i < n1; i++)
 L[i] = arr[l + i];
 for (int j = 0; j < n2; j++)
 R[j] = arr[m + 1 + j];
 int i = 0, j = 0, k = l;
 while (i < n1 && j < n2) {
 if (L[i] <= R[j]) {
 arr[k] = L[i];
 i++;
 } else {
 arr[k] = R[j];
 j++;
 }
 k++;
 }
 while (i < n1) {
 arr[k] = L[i];
 i++;
 k++;
 }
 while (j < n2) {
 arr[k] = R[j];
 j++;
 k++;
 }
}
void mergeSort(int arr[], int l, int r) {
 if (l < r) {
 int m = l + (r - l) / 2;
 
 mergeSort(arr, l, m);
 mergeSort(arr, m + 1, r);
 merge(arr, l, m, r);
 }
}
void printArray(int arr[], int size) {
 for (int i = 0; i < size; i++)
 printf("%d ", arr[i]);
 printf("\n");
}
int main() {
 int arr[] = {42,24,9,21,76,7,4,35};
 int n = sizeof(arr) / sizeof(arr[0]);
 printf("Original array: \n");
 printArray(arr, n);
 mergeSort(arr, 0, n - 1);
 printf("Sorted array with Merge Sort: \n");
 printArray(arr, n);
 return 0;
}
Output :
Original array: 
42 24 9 21 76 7 4 35 
Sorted array with Merge Sort: 
4 7 9 21 24 35 42 76
